package bigendian_test

import (
	"github.com/reiver/go-endian/big"

	"bytes"
	"math/rand"
	"time"

	"testing"
)

func TestWrite(t *testing.T) {

	tests := []struct{
		Value interface{}
		Expected []byte
	}{
		{
			Value:     uint8(0x00),
			Expected: []byte{0x00},

		},
		{
			Value:     uint8(0x01),
			Expected: []byte{0x01},

		},
		{
			Value:     uint8(0x02),
			Expected: []byte{0x02},

		},
		{
			Value:     uint8(0x03),
			Expected: []byte{0x03},

		},
		{
			Value:     uint8(0x04),
			Expected: []byte{0x04},

		},
		{
			Value:     uint8(0x05),
			Expected: []byte{0x05},

		},
		{
			Value:     uint8(0x06),
			Expected: []byte{0x06},

		},
		{
			Value:     uint8(0x07),
			Expected: []byte{0x07},

		},
		{
			Value:     uint8(0x08),
			Expected: []byte{0x08},

		},
		{
			Value:     uint8(0x09),
			Expected: []byte{0x09},

		},
		{
			Value:     uint8(0x0a),
			Expected: []byte{0x0a},

		},
		{
			Value:     uint8(0x0b),
			Expected: []byte{0x0b},

		},
		{
			Value:     uint8(0x0c),
			Expected: []byte{0x0c},

		},
		{
			Value:     uint8(0x0d),
			Expected: []byte{0x0d},

		},
		{
			Value:     uint8(0x0e),
			Expected: []byte{0x0e},

		},
		{
			Value:     uint8(0x0f),
			Expected: []byte{0x0f},

		},
		{
			Value:     uint8(0x10),
			Expected: []byte{0x10},

		},
		{
			Value:     uint8(0x11),
			Expected: []byte{0x11},

		},
		{
			Value:     uint8(0x12),
			Expected: []byte{0x12},

		},
		{
			Value:     uint8(0x13),
			Expected: []byte{0x13},

		},

		{
			Value:     uint8(0xef),
			Expected: []byte{0xef},

		},
		{
			Value:     uint8(0xf0),
			Expected: []byte{0xf0},

		},
		{
			Value:     uint8(0xf1),
			Expected: []byte{0xf1},

		},
		{
			Value:     uint8(0xf2),
			Expected: []byte{0xf2},

		},
		{
			Value:     uint8(0xf3),
			Expected: []byte{0xf3},

		},
		{
			Value:     uint8(0xf4),
			Expected: []byte{0xf4},

		},
		{
			Value:     uint8(0xf5),
			Expected: []byte{0xf5},

		},
		{
			Value:     uint8(0xf6),
			Expected: []byte{0xf6},

		},
		{
			Value:     uint8(0xf7),
			Expected: []byte{0xf7},

		},
		{
			Value:     uint8(0xf8),
			Expected: []byte{0xf8},

		},
		{
			Value:     uint8(0xf9),
			Expected: []byte{0xf9},

		},
		{
			Value:     uint8(0xfa),
			Expected: []byte{0xfa},

		},
		{
			Value:     uint8(0xfb),
			Expected: []byte{0xfb},

		},
		{
			Value:     uint8(0xfc),
			Expected: []byte{0xfc},

		},
		{
			Value:     uint8(0xfd),
			Expected: []byte{0xfd},

		},
		{
			Value:     uint8(0xfe),
			Expected: []byte{0xfe},

		},
		{
			Value:     uint8(0xff),
			Expected: []byte{0xff},

		},



























		{
			Value:       uint16(0x0000),
			Expected: []byte{0x00,0x00},

		},
		{
			Value:       uint16(0x0001),
			Expected: []byte{0x00,0x01},

		},
		{
			Value:       uint16(0x0002),
			Expected: []byte{0x00,0x02},

		},
		{
			Value:       uint16(0x0003),
			Expected: []byte{0x00,0x03},

		},
		{
			Value:       uint16(0x0004),
			Expected: []byte{0x00,0x04},

		},
		{
			Value:       uint16(0x0005),
			Expected: []byte{0x00,0x05},

		},
		{
			Value:       uint16(0x0006),
			Expected: []byte{0x00,0x06},

		},
		{
			Value:       uint16(0x0007),
			Expected: []byte{0x00,0x07},

		},
		{
			Value:       uint16(0x0008),
			Expected: []byte{0x00,0x08},

		},
		{
			Value:       uint16(0x0009),
			Expected: []byte{0x00,0x09},

		},
		{
			Value:       uint16(0x000a),
			Expected: []byte{0x00,0x0a},

		},
		{
			Value:       uint16(0x000b),
			Expected: []byte{0x00,0x0b},

		},
		{
			Value:       uint16(0x000c),
			Expected: []byte{0x00,0x0c},

		},
		{
			Value:       uint16(0x000d),
			Expected: []byte{0x00,0x0d},

		},
		{
			Value:       uint16(0x000e),
			Expected: []byte{0x00,0x0e},

		},
		{
			Value:       uint16(0x000f),
			Expected: []byte{0x00,0x0f},

		},
		{
			Value:       uint16(0x0010),
			Expected: []byte{0x00,0x10},

		},
		{
			Value:       uint16(0x0011),
			Expected: []byte{0x00,0x11},

		},
		{
			Value:       uint16(0x0012),
			Expected: []byte{0x00,0x12},

		},
		{
			Value:       uint16(0x0013),
			Expected: []byte{0x00,0x13},

		},

		{
			Value:       uint16(0x00ef),
			Expected: []byte{0x00,0xef},

		},
		{
			Value:       uint16(0x00f0),
			Expected: []byte{0x00,0xf0},

		},
		{
			Value:       uint16(0x00f1),
			Expected: []byte{0x00,0xf1},

		},
		{
			Value:       uint16(0x00f2),
			Expected: []byte{0x00,0xf2},

		},
		{
			Value:       uint16(0x00f3),
			Expected: []byte{0x00,0xf3},

		},
		{
			Value:       uint16(0x00f4),
			Expected: []byte{0x00,0xf4},

		},
		{
			Value:       uint16(0x00f5),
			Expected: []byte{0x00,0xf5},

		},
		{
			Value:       uint16(0x00f6),
			Expected: []byte{0x00,0xf6},

		},
		{
			Value:       uint16(0x00f7),
			Expected: []byte{0x00,0xf7},

		},
		{
			Value:       uint16(0x00f8),
			Expected: []byte{0x00,0xf8},

		},
		{
			Value:       uint16(0x00f9),
			Expected: []byte{0x00,0xf9},

		},
		{
			Value:       uint16(0x00fa),
			Expected: []byte{0x00,0xfa},

		},
		{
			Value:       uint16(0x00fb),
			Expected: []byte{0x00,0xfb},

		},
		{
			Value:       uint16(0x00fc),
			Expected: []byte{0x00,0xfc},

		},
		{
			Value:       uint16(0x00fd),
			Expected: []byte{0x00,0xfd},

		},
		{
			Value:       uint16(0x00fe),
			Expected: []byte{0x00,0xfe},

		},
		{
			Value:       uint16(0x00ff),
			Expected: []byte{0x00,0xff},

		},
		{
			Value:       uint16(0x0100),
			Expected: []byte{0x01,0x00},

		},
		{
			Value:       uint16(0x0101),
			Expected: []byte{0x01,0x01},

		},
		{
			Value:       uint16(0x0102),
			Expected: []byte{0x01,0x02},

		},
		{
			Value:       uint16(0x0103),
			Expected: []byte{0x01,0x03},

		},

		{
			Value:       uint16(0x0245),
			Expected: []byte{0x02,0x45},

		},

		{
			Value:       uint16(0x37ae),
			Expected: []byte{0x37,0xae},

		},

		{
			Value:       uint16(0xfffa),
			Expected: []byte{0xff,0xfa},

		},
		{
			Value:       uint16(0xfffb),
			Expected: []byte{0xff,0xfb},

		},
		{
			Value:       uint16(0xfffc),
			Expected: []byte{0xff,0xfc},

		},
		{
			Value:       uint16(0xfffd),
			Expected: []byte{0xff,0xfd},

		},
		{
			Value:       uint16(0xfffe),
			Expected: []byte{0xff,0xfe},

		},
		{
			Value:       uint16(0xffff),
			Expected: []byte{0xff,0xff},

		},



























		{
			Value: uint32(0x00000000),
			Expected:    []byte{0x00,0x00,0x00,0x00},

		},
		{
			Value: uint32(0x00000001),
			Expected:    []byte{0x00,0x00,0x00,0x01},

		},
		{
			Value: uint32(0x00000002),
			Expected:    []byte{0x00,0x00,0x00,0x02},

		},
		{
			Value: uint32(0x00000003),
			Expected:    []byte{0x00,0x00,0x00,0x03},

		},
		{
			Value: uint32(0x00000004),
			Expected:    []byte{0x00,0x00,0x00,0x04},

		},
		{
			Value: uint32(0x00000005),
			Expected:    []byte{0x00,0x00,0x00,0x05},

		},
		{
			Value: uint32(0x00000006),
			Expected:    []byte{0x00,0x00,0x00,0x06},

		},
		{
			Value: uint32(0x00000007),
			Expected:    []byte{0x00,0x00,0x00,0x07},

		},
		{
			Value: uint32(0x00000008),
			Expected:    []byte{0x00,0x00,0x00,0x08},

		},
		{
			Value: uint32(0x00000009),
			Expected:    []byte{0x00,0x00,0x00,0x09},

		},
		{
			Value: uint32(0x0000000a),
			Expected:    []byte{0x00,0x00,0x00,0x0a},

		},
		{
			Value: uint32(0x0000000b),
			Expected:    []byte{0x00,0x00,0x00,0x0b},

		},
		{
			Value: uint32(0x0000000c),
			Expected:    []byte{0x00,0x00,0x00,0x0c},

		},
		{
			Value: uint32(0x0000000d),
			Expected:    []byte{0x00,0x00,0x00,0x0d},

		},
		{
			Value: uint32(0x0000000e),
			Expected:    []byte{0x00,0x00,0x00,0x0e},

		},
		{
			Value: uint32(0x0000000f),
			Expected:    []byte{0x00,0x00,0x00,0x0f},

		},
		{
			Value: uint32(0x00000010),
			Expected:    []byte{0x00,0x00,0x00,0x10},

		},
		{
			Value: uint32(0x00000011),
			Expected:    []byte{0x00,0x00,0x00,0x11},

		},
		{
			Value: uint32(0x00000012),
			Expected:    []byte{0x00,0x00,0x00,0x12},

		},
		{
			Value: uint32(0x00000013),
			Expected:    []byte{0x00,0x00,0x00,0x13},

		},

		{
			Value: uint32(0x000000ef),
			Expected:    []byte{0x00,0x00,0x00,0xef},

		},
		{
			Value: uint32(0x000000f0),
			Expected:    []byte{0x00,0x00,0x00,0xf0},

		},
		{
			Value: uint32(0x000000f1),
			Expected:    []byte{0x00,0x00,0x00,0xf1},

		},
		{
			Value: uint32(0x000000f2),
			Expected:    []byte{0x00,0x00,0x00,0xf2},

		},
		{
			Value: uint32(0x000000f3),
			Expected:    []byte{0x00,0x00,0x00,0xf3},

		},
		{
			Value: uint32(0x000000f4),
			Expected:    []byte{0x00,0x00,0x00,0xf4},

		},
		{
			Value: uint32(0x000000f5),
			Expected:    []byte{0x00,0x00,0x00,0xf5},

		},
		{
			Value: uint32(0x000000f6),
			Expected:    []byte{0x00,0x00,0x00,0xf6},

		},
		{
			Value: uint32(0x000000f7),
			Expected:    []byte{0x00,0x00,0x00,0xf7},

		},
		{
			Value: uint32(0x000000f8),
			Expected:    []byte{0x00,0x00,0x00,0xf8},

		},
		{
			Value: uint32(0x000000f9),
			Expected:    []byte{0x00,0x00,0x00,0xf9},

		},
		{
			Value: uint32(0x000000fa),
			Expected:    []byte{0x00,0x00,0x00,0xfa},

		},
		{
			Value: uint32(0x000000fb),
			Expected:    []byte{0x00,0x00,0x00,0xfb},

		},
		{
			Value: uint32(0x000000fc),
			Expected:    []byte{0x00,0x00,0x00,0xfc},

		},
		{
			Value: uint32(0x000000fd),
			Expected:    []byte{0x00,0x00,0x00,0xfd},

		},
		{
			Value: uint32(0x000000fe),
			Expected:    []byte{0x00,0x00,0x00,0xfe},

		},
		{
			Value: uint32(0x000000ff),
			Expected:    []byte{0x00,0x00,0x00,0xff},

		},
		{
			Value: uint32(0x00000100),
			Expected:    []byte{0x00,0x00,0x01,0x00},

		},
		{
			Value: uint32(0x00000101),
			Expected:    []byte{0x00,0x00,0x01,0x01},

		},
		{
			Value: uint32(0x00000102),
			Expected:    []byte{0x00,0x00,0x01,0x02},

		},
		{
			Value: uint32(0x00000103),
			Expected:    []byte{0x00,0x00,0x01,0x03},

		},

		{
			Value: uint32(0x00000245),
			Expected:    []byte{0x00,0x00,0x02,0x45},

		},

		{
			Value: uint32(0x000037ae),
			Expected:    []byte{0x00,0x00,0x37,0xae},

		},

		{
			Value: uint32(0x0000fffa),
			Expected:    []byte{0x00,0x00,0xff,0xfa},

		},
		{
			Value: uint32(0x0000fffb),
			Expected:    []byte{0x00,0x00,0xff,0xfb},

		},
		{
			Value: uint32(0x0000fffc),
			Expected:    []byte{0x00,0x00,0xff,0xfc},

		},
		{
			Value: uint32(0x0000fffd),
			Expected:    []byte{0x00,0x00,0xff,0xfd},

		},
		{
			Value: uint32(0x0000fffe),
			Expected:    []byte{0x00,0x00,0xff,0xfe},

		},
		{
			Value: uint32(0x0000ffff),
			Expected:    []byte{0x00,0x00,0xff,0xff},

		},
		{
			Value: uint32(0x00010000),
			Expected:    []byte{0x00,0x01,0x00,0x00},

		},
		{
			Value: uint32(0x00010001),
			Expected:    []byte{0x00,0x01,0x00,0x01},

		},
		{
			Value: uint32(0x00010002),
			Expected:    []byte{0x00,0x01,0x00,0x02},

		},
		{
			Value: uint32(0x00010003),
			Expected:    []byte{0x00,0x01,0x00,0x03},

		},

		{
			Value: uint32(0x1357bd24),
			Expected:    []byte{0x13,0x57,0xbd,0x24},

		},

		{
			Value: uint32(0xffffffff),
			Expected:    []byte{0xff,0xff,0xff,0xff},

		},



























		{
			Value: uint64(0x0000000000000000),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

		},
		{
			Value: uint64(0x0000000000000001),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01},

		},
		{
			Value: uint64(0x0000000000000002),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02},

		},
		{
			Value: uint64(0x0000000000000003),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03},

		},
		{
			Value: uint64(0x0000000000000004),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04},

		},
		{
			Value: uint64(0x0000000000000005),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05},

		},
		{
			Value: uint64(0x0000000000000006),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06},

		},
		{
			Value: uint64(0x0000000000000007),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07},

		},
		{
			Value: uint64(0x0000000000000008),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08},

		},
		{
			Value: uint64(0x0000000000000009),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09},

		},
		{
			Value: uint64(0x000000000000000a),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a},

		},
		{
			Value: uint64(0x000000000000000b),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b},

		},
		{
			Value: uint64(0x000000000000000c),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c},

		},
		{
			Value: uint64(0x000000000000000d),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0d},

		},
		{
			Value: uint64(0x000000000000000e),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e},

		},
		{
			Value: uint64(0x000000000000000f),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f},

		},
		{
			Value: uint64(0x0000000000000010),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10},

		},
		{
			Value: uint64(0x0000000000000011),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11},

		},
		{
			Value: uint64(0x0000000000000012),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12},

		},
		{
			Value: uint64(0x0000000000000013),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13},

		},

		{
			Value: uint64(0x00000000000000ef),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xef},

		},
		{
			Value: uint64(0x00000000000000f0),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf0},

		},
		{
			Value: uint64(0x00000000000000f1),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf1},

		},
		{
			Value: uint64(0x00000000000000f2),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf2},

		},
		{
			Value: uint64(0x00000000000000f3),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf3},

		},
		{
			Value: uint64(0x00000000000000f4),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf4},

		},
		{
			Value: uint64(0x00000000000000f5),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf5},

		},
		{
			Value: uint64(0x00000000000000f6),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf6},

		},
		{
			Value: uint64(0x00000000000000f7),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf7},

		},
		{
			Value: uint64(0x00000000000000f8),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf8},

		},
		{
			Value: uint64(0x00000000000000f9),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf9},

		},
		{
			Value: uint64(0x00000000000000fa),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfa},

		},
		{
			Value: uint64(0x00000000000000fb),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfb},

		},
		{
			Value: uint64(0x00000000000000fc),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfc},

		},
		{
			Value: uint64(0x00000000000000fd),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfd},

		},
		{
			Value: uint64(0x00000000000000fe),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe},

		},
		{
			Value: uint64(0x00000000000000ff),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff},

		},
		{
			Value: uint64(0x0000000000000100),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00},

		},
		{
			Value: uint64(0x0000000000000101),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01},

		},
		{
			Value: uint64(0x0000000000000102),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02},

		},
		{
			Value: uint64(0x0000000000000103),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03},

		},

		{
			Value: uint64(0x0000000000000245),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x45},

		},

		{
			Value: uint64(0x00000000000037ae),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x37,0xae},

		},

		{
			Value: uint64(0x000000000000fffa),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xfa},

		},
		{
			Value: uint64(0x000000000000fffb),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xfb},

		},
		{
			Value: uint64(0x000000000000fffc),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xfc},

		},
		{
			Value: uint64(0x000000000000fffd),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xfd},

		},
		{
			Value: uint64(0x000000000000fffe),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xfe},

		},
		{
			Value: uint64(0x000000000000ffff),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff},

		},
		{
			Value: uint64(0x0000000000010000),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00},

		},
		{
			Value: uint64(0x0000000000010001),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x01},

		},
		{
			Value: uint64(0x0000000000010002),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02},

		},
		{
			Value: uint64(0x0000000000010003),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x03},

		},

		{
			Value: uint64(0x000000001357bd24),
			Expected:            []byte{0x00,0x00,0x00,0x00,0x13,0x57,0xbd,0x24},

		},

		{
			Value: uint64(0x00000000ffffffff),
			Expected:            []byte{0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff},

		},

		{
			Value: uint64(0xfedcba9876543210),
			Expected:            []byte{0xfe,0xdc,0xba,0x98,0x76,0x54,0x32,0x10},

		},

		{
			Value: uint64(0xffffffffffffffff),
			Expected:            []byte{0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff},

		},


























		{
			Value:  [1]uint8{0x00},
			Expected: []byte{0x00},
		},
		{
			Value:  [1]uint8{0x01},
			Expected: []byte{0x01},
		},
		{
			Value:  [1]uint8{0x02},
			Expected: []byte{0x02},
		},
		{
			Value:  [1]uint8{0x03},
			Expected: []byte{0x03},
		},
		{
			Value:  [1]uint8{0x04},
			Expected: []byte{0x04},
		},
		{
			Value:  [1]uint8{0x05},
			Expected: []byte{0x05},
		},

		{
			Value:  [1]uint8{0x5e},
			Expected: []byte{0x5e},
		},

		{
			Value:  [1]uint8{0xfe},
			Expected: []byte{0xfe},
		},
		{
			Value:  [1]uint8{0xff},
			Expected: []byte{0xff},
		},









		{
			Value:  [2]uint8{0x00,0x00},
			Expected: []byte{0x00,0x00},
		},

		{
			Value:  [2]uint8{0x07,0x0a},
			Expected: []byte{0x07,0x0a},
		},

		{
			Value:  [2]uint8{0x5e,0x2b},
			Expected: []byte{0x5e,0x2b},
		},

		{
			Value:  [2]uint8{0xa0,0x0a},
			Expected: []byte{0xa0,0x0a},
		},

		{
			Value:  [2]uint8{0xfe,0x01},
			Expected: []byte{0xfe,0x01},
		},

		{
			Value:  [2]uint8{0xff,0xff},
			Expected: []byte{0xff,0xff},
		},



		{
			Value:  [5]uint8{0x00,0x00,0x00,0x00,0x00},
			Expected: []byte{0x00,0x00,0x00,0x00,0x00},
		},

		{
			Value:  [5]uint8{0x07,0x0a,0xe5,0xd3,0xc0},
			Expected: []byte{0x07,0x0a,0xe5,0xd3,0xc0},
		},

		{
			Value:  [5]uint8{0x5e,0x2b,0xd3,0x70,0x5d},
			Expected: []byte{0x5e,0x2b,0xd3,0x70,0x5d},
		},

		{
			Value:  [5]uint8{0xa0,0x0a,0xfc,0xcf,0x01},
			Expected: []byte{0xa0,0x0a,0xfc,0xcf,0x01},
		},

		{
			Value:  [5]uint8{0xfe,0x01,0x45,0xdd,0x8b},
			Expected: []byte{0xfe,0x01,0x45,0xdd,0x8b},
		},

		{
			Value:  [5]uint8{0xff,0xff,0xff,0xff,0xff},
			Expected: []byte{0xff,0xff,0xff,0xff,0xff},
		},



























		{
			Value:      [1]uint16{0x0000},
			Expected:   []byte{0x00,0x00},
		},
		{
			Value:      [1]uint16{0x0001},
			Expected:   []byte{0x00,0x01},
		},
		{
			Value:      [1]uint16{0x0002},
			Expected:   []byte{0x00,0x02},
		},
		{
			Value:      [1]uint16{0x0003},
			Expected:   []byte{0x00,0x03},
		},
		{
			Value:      [1]uint16{0x0004},
			Expected:   []byte{0x00,0x04},
		},
		{
			Value:      [1]uint16{0x0005},
			Expected:   []byte{0x00,0x05},
		},

		{
			Value:      [1]uint16{0x005e},
			Expected:   []byte{0x00,0x5e},
		},

		{
			Value:      [1]uint16{0x00fe},
			Expected:   []byte{0x00,0xfe},
		},
		{
			Value:      [1]uint16{0x00ff},
			Expected:   []byte{0x00,0xff},
		},

		{
			Value:      [1]uint16{0xabcd},
			Expected:   []byte{0xab,0xcd},
		},

		{
			Value:      [1]uint16{0xffff},
			Expected:   []byte{0xff,0xff},
		},









		{
			Value: [4]uint16{0x0000,0x0000,0x0000,0x0000},
			Expected:   []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		},
		{
			Value: [4]uint16{0x1234,0x5678,0x9abc,0xdef0},
			Expected:   []byte{0x12,0x34,0x56,0x78,0x9a,0xbc,0xde,0xf0},
		},
		{
			Value: [4]uint16{0xffff,0xffff,0xffff,0xffff},
			Expected:   []byte{0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff},
		},



























		{
			Value: [1]uint32{0x00000000},
			Expected:   []byte{0x00,0x00,0x00,0x00},
		},
		{
			Value: [1]uint32{0x12345678},
			Expected:   []byte{0x12,0x34,0x56,0x78},
		},
		{
			Value: [1]uint32{0xffffffff},
			Expected:   []byte{0xff,0xff,0xff,0xff},
		},









		{
			Value: [4]uint32{0x00000000,0x00000000,0x00000000,0x00000000},
			Expected:   []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		},
		{
			Value: [4]uint32{0x12345678,0x23456789,0x3456789a,0x456789ab},
			Expected:   []byte{0x12,0x34,0x56,0x78,0x23,0x45,0x67,0x89,0x34,0x56,0x78,0x9a,0x45,0x67,0x89,0xab},
		},
		{
			Value: [4]uint32{0xffffffff,0xffffffff,0xffffffff,0xffffffff},
			Expected:   []byte{0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff},
		},



























		{
			Value: [1]uint64{0x0000000000000000},
			Expected:   []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		},
		{
			Value: [1]uint64{0x123456789abcdef0},
			Expected:   []byte{0x12,0x34,0x56,0x78,0x9a,0xbc,0xde,0xf0},
		},
		{
			Value: [1]uint64{0xffffffffffffffff},
			Expected:   []byte{0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff},
		},









		{
			Value: [4]uint64{0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000},
			Expected:   []byte{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
		},
		{
			Value: [4]uint64{0x123456789abcdef0,0x13579bdf02468ace,0x151d94af24a0f392,0xf4e2d88bee7bf5e4},
			Expected:   []byte{0x12,0x34,0x56,0x78,0x9a,0xbc,0xde,0xf0,0x13,0x57,0x9b,0xdf,0x02,0x46,0x8a,0xce,0x15,0x1d,0x94,0xaf,0x24,0xa0,0xf3,0x92,0xf4,0xe2,0xd8,0x8b,0xee,0x7b,0xf5,0xe4},
		},
		{
			Value: [4]uint64{0xffffffffffffffff,0xffffffffffffffff,0xffffffffffffffff,0xffffffffffffffff},
			Expected:   []byte{0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff},
		},


























		{
			Value: struct{
				Apple uint16
				Banana uint32
				Cherry [5]uint8
				Date uint64
			}{
				Apple:  uint16(0xabcd),
				Banana: uint32(0x0f1e2d3c),
				Cherry: [5]uint8{0x43,0x48,0x45,0x45,0x59},
				Date: uint64(0x0123456789abcdef),
			},
			Expected: []byte{0xab,0xcd, 0x0f,0x1e,0x2d,0x3c, 0x43,0x48,0x45,0x45,0x59, 0x01,0x23,0x45,0x67,0x89,0xab,0xcd,0xef},
		},



























		{
			Value: [5]struct{
				X uint32
				Y uint32
			}{
				{
					X: uint32(0x00000000),
					Y: uint32(0x00000001),
				},
				{
					X: uint32(0x00000000),
					Y: uint32(0x00000000),
				},
				{
					X: uint32(0x00000001),
					Y: uint32(0x00000000),
				},
				{
					X: uint32(0x00000001),
					Y: uint32(0x00000001),
				},
				{
					X: uint32(0x00000001),
					Y: uint32(0x00000000),
				},
			},
			Expected: []byte{0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x01,   0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00,   0x00,0x00,0x00,0x01, 0x00,0x00,0x00,0x00,   0x00,0x00,0x00,0x01, 0x00,0x00,0x00,0x01,   0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00},
		},
	}


	{
		randomness := rand.New(rand.NewSource( time.Now().UTC().UnixNano() ))

		const max = 50
		for i:=0; i<max; i++ {
			x64 := randomness.Int63n(0xffff)

			u8 := uint8(x64)

			var b0 byte = u8

			test := struct{
				Value interface{}
				Expected []byte
			}{
				Value:           u8,
				Expected: []byte{b0},
			}

			tests = append(tests, test)
		}
	}

	{
		randomness := rand.New(rand.NewSource( time.Now().UTC().UnixNano() ))

		const max = 50
		for i:=0; i<max; i++ {
			x64 := randomness.Int63n(0xffff)

			u16 := uint16(x64)

			var b0 byte = uint8((0xff00 & u16) >> 8)
			var b1 byte = uint8( 0x00ff & u16      )

			test := struct{
				Value interface{}
				Expected []byte
			}{
				Value:           u16,
				Expected: []byte{b0, b1},
			}

			tests = append(tests, test)
		}
	}


	{
		randomness := rand.New(rand.NewSource( time.Now().UTC().UnixNano() ))

		const max = 50
		for i:=0; i<max; i++ {
			x64 := randomness.Int63n(0xffffffff)

			u32 := uint32(x64)

			var b0 byte = uint8((0xff000000 & u32) >> 24)
			var b1 byte = uint8((0x00ff0000 & u32) >> 16)
			var b2 byte = uint8((0x0000ff00 & u32) >> 8)
			var b3 byte = uint8( 0x000000ff & u32      )

			test := struct{
				Value interface{}
				Expected []byte
			}{
				Value:           u32,
				Expected: []byte{b0, b1, b2, b3},
			}

			tests = append(tests, test)
		}
	}

	{
		randomness := rand.New(rand.NewSource( time.Now().UTC().UnixNano() ))

		const max = 50
		for i:=0; i<max; i++ {
			x64 := randomness.Int63()

			u64 := uint64(x64)

			var b0 byte = uint8((0xff00000000000000 & u64) >> 56)
			var b1 byte = uint8((0x00ff000000000000 & u64) >> 48)
			var b2 byte = uint8((0x0000ff0000000000 & u64) >> 40)
			var b3 byte = uint8((0x000000ff00000000 & u64) >> 32)
			var b4 byte = uint8((0x00000000ff000000 & u64) >> 24)
			var b5 byte = uint8((0x0000000000ff0000 & u64) >> 16)
			var b6 byte = uint8((0x000000000000ff00 & u64) >>  8)
			var b7 byte = uint8( 0x00000000000000ff & u64       )

			test := struct{
				Value interface{}
				Expected []byte
			}{
				Value:           u64,
				Expected: []byte{b0, b1, b2, b3, b4, b5, b6, b7},
			}

			tests = append(tests, test)
		}
	}


	for testNumber, test := range tests {

		var buffer bytes.Buffer

		n64, err := bigendian.WriteTo(&buffer, test.Value)
		if nil != err {
			t.Errorf("For test #%d, did not expect an error, but actually go one: (%T) %q", testNumber, err, err)
			continue
		}

		if expected, actual := int64(len(test.Expected)), n64; expected != actual {
			t.Errorf("For test #%d, expected %d, but actually got %d.", testNumber, expected, actual)
			t.Errorf("\tVALUE: %#v", test.Value)
			t.Errorf("\tEXPECTED []byte: % v",test.Expected)
			t.Errorf("\tACTUAL   []byte: % v", buffer.Bytes())
			continue
		}

		if expected, actual := test.Expected, buffer.Bytes(); !bytes.Equal(expected, actual) {
			t.Errorf("For test #%d,....", testNumber)
			t.Errorf("\tEXPECTED: % v", expected)
			t.Errorf("\tACTUAL:   % v", actual)
			continue
		}
	}
}
